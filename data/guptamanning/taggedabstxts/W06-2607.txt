<tag name="TECHNIQUE" value="start"/>Tree Kernel<tag name="TECHNIQUE" value="end"/> Engineering In <tag name="DOMAIN" value="start"/><tag name="FOCUS" value="start"/>Semantic Role Labeling<tag name="FOCUS" value="end"/><tag name="DOMAIN" value="end"/> Systems .
Recent work on the design of automatic systems for <tag name="DOMAIN" value="start"/><tag name="FOCUS" value="start"/>semantic role labeling<tag name="FOCUS" value="end"/><tag name="DOMAIN" value="end"/> has shown that feature engineering is a complex task from a modeling and implementation point of view .
<tag name="TECHNIQUE" value="start"/>Tree kernels<tag name="TECHNIQUE" value="end"/> alleviate suchcomplexityaskernelfunctionsgenerate features automatically and require less software development for data extraction .
In this paper , we study several <tag name="TECHNIQUE" value="start"/>tree kernel<tag name="TECHNIQUE" value="end"/> approaches for both <tag name="DOMAIN" value="start"/>boundary detection<tag name="DOMAIN" value="end"/> and <tag name="DOMAIN" value="start"/>argument classification<tag name="DOMAIN" value="end"/> .
The comparative experiments on <tag name="TECHNIQUE" value="start"/>Support Vector Machines<tag name="TECHNIQUE" value="end"/> with such <tag name="TECHNIQUE" value="start"/>kernels<tag name="TECHNIQUE" value="end"/> on the CoNLL 2005 dataset show that very simple tree manipulations trigger automatic feature engineering that highly improves accuracy and efficiency in both phases .
Moreover , the use of different classifiers for internal andpre-terminalnodesmaintainsthesame accuracy and highly improves efficiency .